# This can be a git url or tarball url
export ZOPEN_DEV_URL="https://gn.googlesource.com/gn"
# This is how you specify a branch for the git repo specified above
# Its not needed unless this particular branch uses something other
# than the default main branch.
export ZOPEN_DEV_BRANCH="main"
# To have the URL be recognized as a GIT repo
export ZOPEN_DEV_TYPE="GIT"
export ZOPEN_CHECK_TIMEOUT=20000
# This specifies other ZOSOpenTools dependencies.  
# Repos are specifed without a port suffix.
export ZOPEN_DEV_DEPS="zoslib python ninja git curl gzip make m4 comp_clang"
# This specifies to use either DEV or STABLE build.  It appears
# you can use a tarball url for a STABLE build and a git
# repo for a DEV build.
export ZOPEN_BUILD_LINE="DEV"
# This is supposed to a tar file of source build
#export ZOPEN_STABLE_URL="https://ftp.xxx.xxx/gn.tar.Z"
#export ZOPEN_STABLE_DEPS="zoslib"
export ZOPEN_RUNTIME_DEPS="bash"
export ZOPEN_CATEGORIES="development"
export ZOPEN_COMP=CLANG

# These settings are for specifying custom build 
# types other than configure and make.
ZOPEN_CONFIGURE="zopen_configure"
ZOPEN_MAKE="zopen_build"
ZOPEN_CHECK="zopen_check"


zopen_configure() {
 # ORIG IGOR  python3 build/gen.py --zoslib-dir `pwd`/third_party/zoslib
  python build/gen.py --zoslib-dir $ZOSLIB_HOME
}
zopen_build() {
  ninja -C out -j $ZOPEN_NUM_JOBS -v
}
zopen_check() {
  ./out/gn_unittests
}


zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "1.0.0"
}

